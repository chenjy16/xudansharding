<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.midea.trade.sharding.mapper.TOrderMainMapper" >
  <resultMap id="BaseResultMap" type="com.midea.trade.sharding.entity.TOrderMain" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="platform_id" property="platformId" jdbcType="TINYINT" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="outer_order_id" property="outerOrderId" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="TINYINT" />
    <result column="pay_code" property="payCode" jdbcType="TINYINT" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="item_amount" property="itemAmount" jdbcType="DECIMAL" />
    <result column="delivery_fee" property="deliveryFee" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="adjust_amount" property="adjustAmount" jdbcType="DECIMAL" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DECIMAL" />
    <result column="other_amount" property="otherAmount" jdbcType="DECIMAL" />
    <result column="trade_from" property="tradeFrom" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_order_no" property="payOrderNo" jdbcType="VARCHAR" />
    <result column="sale_type" property="saleType" jdbcType="TINYINT" />
    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
    <result column="order_flag" property="orderFlag" jdbcType="TINYINT" />
    <result column="refund_status" property="refundStatus" jdbcType="TINYINT" />
    <result column="is_invoice" property="isInvoice" jdbcType="BIT" />
    <result column="invoice_code" property="invoiceCode" jdbcType="VARCHAR" />
    <result column="logistics_com_code" property="logisticsComCode" jdbcType="VARCHAR" />
    <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
    <result column="outer_create_time" property="outerCreateTime" jdbcType="TIMESTAMP" />
    <result column="seller_memo" property="sellerMemo" jdbcType="VARCHAR" />
    <result column="buyer_memo" property="buyerMemo" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="remain_time" property="remainTime" jdbcType="TIMESTAMP" />
    <result column="allocated_time" property="allocatedTime" jdbcType="TIMESTAMP" />
    <result column="shiped_time" property="shipedTime" jdbcType="TIMESTAMP" />
    <result column="buyer_nick" property="buyerNick" jdbcType="VARCHAR" />
    <result column="received_time" property="receivedTime" jdbcType="TIMESTAMP" />
    <result column="approve_time" property="approveTime" jdbcType="TIMESTAMP" />
    <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="parent_order_id" property="parentOrderId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="approve_mip" property="approveMip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, platform_id, shop_id, outer_order_id, order_type, pay_code, total_amount, 
    item_amount, delivery_fee, discount_amount, adjust_amount, payment_amount, other_amount, 
    trade_from, pay_time, pay_order_no, sale_type, order_status, order_flag, refund_status, 
    is_invoice, invoice_code, logistics_com_code, logistics_no, outer_create_time, seller_memo, 
    buyer_memo, store_id, remain_time, allocated_time, shiped_time, buyer_nick, received_time, 
    approve_time, cancel_time, parent_order_id, create_time, update_time, approve_mip
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.midea.trade.sharding.entity.TOrderMainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order_main
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order_main
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.midea.trade.sharding.entity.TOrderMainExample" >
    delete from t_order_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.midea.trade.sharding.entity.TOrderMain" >
    insert into t_order_main (order_id, platform_id, shop_id, 
      outer_order_id, order_type, pay_code, 
      total_amount, item_amount, delivery_fee, 
      discount_amount, adjust_amount, payment_amount, 
      other_amount, trade_from, pay_time, 
      pay_order_no, sale_type, order_status, 
      order_flag, refund_status, is_invoice, 
      invoice_code, logistics_com_code, logistics_no, 
      outer_create_time, seller_memo, buyer_memo, 
      store_id, remain_time, allocated_time, 
      shiped_time, buyer_nick, received_time, 
      approve_time, cancel_time, parent_order_id, 
      create_time, update_time, approve_mip
      )
    values (#{orderId,jdbcType=BIGINT}, #{platformId,jdbcType=TINYINT}, #{shopId,jdbcType=INTEGER}, 
      #{outerOrderId,jdbcType=VARCHAR}, #{orderType,jdbcType=TINYINT}, #{payCode,jdbcType=TINYINT}, 
      #{totalAmount,jdbcType=DECIMAL}, #{itemAmount,jdbcType=DECIMAL}, #{deliveryFee,jdbcType=DECIMAL}, 
      #{discountAmount,jdbcType=DECIMAL}, #{adjustAmount,jdbcType=DECIMAL}, #{paymentAmount,jdbcType=DECIMAL}, 
      #{otherAmount,jdbcType=DECIMAL}, #{tradeFrom,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{payOrderNo,jdbcType=VARCHAR}, #{saleType,jdbcType=TINYINT}, #{orderStatus,jdbcType=TINYINT}, 
      #{orderFlag,jdbcType=TINYINT}, #{refundStatus,jdbcType=TINYINT}, #{isInvoice,jdbcType=BIT}, 
      #{invoiceCode,jdbcType=VARCHAR}, #{logisticsComCode,jdbcType=VARCHAR}, #{logisticsNo,jdbcType=VARCHAR}, 
      #{outerCreateTime,jdbcType=TIMESTAMP}, #{sellerMemo,jdbcType=VARCHAR}, #{buyerMemo,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=INTEGER}, #{remainTime,jdbcType=TIMESTAMP}, #{allocatedTime,jdbcType=TIMESTAMP}, 
      #{shipedTime,jdbcType=TIMESTAMP}, #{buyerNick,jdbcType=VARCHAR}, #{receivedTime,jdbcType=TIMESTAMP}, 
      #{approveTime,jdbcType=TIMESTAMP}, #{cancelTime,jdbcType=TIMESTAMP}, #{parentOrderId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{approveMip,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.midea.trade.sharding.entity.TOrderMain" >
    insert into t_order_main
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="outerOrderId != null" >
        outer_order_id,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="payCode != null" >
        pay_code,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="itemAmount != null" >
        item_amount,
      </if>
      <if test="deliveryFee != null" >
        delivery_fee,
      </if>
      <if test="discountAmount != null" >
        discount_amount,
      </if>
      <if test="adjustAmount != null" >
        adjust_amount,
      </if>
      <if test="paymentAmount != null" >
        payment_amount,
      </if>
      <if test="otherAmount != null" >
        other_amount,
      </if>
      <if test="tradeFrom != null" >
        trade_from,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payOrderNo != null" >
        pay_order_no,
      </if>
      <if test="saleType != null" >
        sale_type,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderFlag != null" >
        order_flag,
      </if>
      <if test="refundStatus != null" >
        refund_status,
      </if>
      <if test="isInvoice != null" >
        is_invoice,
      </if>
      <if test="invoiceCode != null" >
        invoice_code,
      </if>
      <if test="logisticsComCode != null" >
        logistics_com_code,
      </if>
      <if test="logisticsNo != null" >
        logistics_no,
      </if>
      <if test="outerCreateTime != null" >
        outer_create_time,
      </if>
      <if test="sellerMemo != null" >
        seller_memo,
      </if>
      <if test="buyerMemo != null" >
        buyer_memo,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="remainTime != null" >
        remain_time,
      </if>
      <if test="allocatedTime != null" >
        allocated_time,
      </if>
      <if test="shipedTime != null" >
        shiped_time,
      </if>
      <if test="buyerNick != null" >
        buyer_nick,
      </if>
      <if test="receivedTime != null" >
        received_time,
      </if>
      <if test="approveTime != null" >
        approve_time,
      </if>
      <if test="cancelTime != null" >
        cancel_time,
      </if>
      <if test="parentOrderId != null" >
        parent_order_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="approveMip != null" >
        approve_mip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=TINYINT},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="outerOrderId != null" >
        #{outerOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="payCode != null" >
        #{payCode,jdbcType=TINYINT},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="itemAmount != null" >
        #{itemAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null" >
        #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAmount != null" >
        #{adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentAmount != null" >
        #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherAmount != null" >
        #{otherAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeFrom != null" >
        #{tradeFrom,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payOrderNo != null" >
        #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="saleType != null" >
        #{saleType,jdbcType=TINYINT},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="orderFlag != null" >
        #{orderFlag,jdbcType=TINYINT},
      </if>
      <if test="refundStatus != null" >
        #{refundStatus,jdbcType=TINYINT},
      </if>
      <if test="isInvoice != null" >
        #{isInvoice,jdbcType=BIT},
      </if>
      <if test="invoiceCode != null" >
        #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="logisticsComCode != null" >
        #{logisticsComCode,jdbcType=VARCHAR},
      </if>
      <if test="logisticsNo != null" >
        #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="outerCreateTime != null" >
        #{outerCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerMemo != null" >
        #{sellerMemo,jdbcType=VARCHAR},
      </if>
      <if test="buyerMemo != null" >
        #{buyerMemo,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="remainTime != null" >
        #{remainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allocatedTime != null" >
        #{allocatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipedTime != null" >
        #{shipedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyerNick != null" >
        #{buyerNick,jdbcType=VARCHAR},
      </if>
      <if test="receivedTime != null" >
        #{receivedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveTime != null" >
        #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentOrderId != null" >
        #{parentOrderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveMip != null" >
        #{approveMip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.midea.trade.sharding.entity.TOrderMainExample" resultType="java.lang.Integer" >
    select count(*) from t_order_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order_main
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.platformId != null" >
        platform_id = #{record.platformId,jdbcType=TINYINT},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.outerOrderId != null" >
        outer_order_id = #{record.outerOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=TINYINT},
      </if>
      <if test="record.payCode != null" >
        pay_code = #{record.payCode,jdbcType=TINYINT},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.itemAmount != null" >
        item_amount = #{record.itemAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryFee != null" >
        delivery_fee = #{record.deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null" >
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustAmount != null" >
        adjust_amount = #{record.adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentAmount != null" >
        payment_amount = #{record.paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.otherAmount != null" >
        other_amount = #{record.otherAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeFrom != null" >
        trade_from = #{record.tradeFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payOrderNo != null" >
        pay_order_no = #{record.payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.saleType != null" >
        sale_type = #{record.saleType,jdbcType=TINYINT},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.orderFlag != null" >
        order_flag = #{record.orderFlag,jdbcType=TINYINT},
      </if>
      <if test="record.refundStatus != null" >
        refund_status = #{record.refundStatus,jdbcType=TINYINT},
      </if>
      <if test="record.isInvoice != null" >
        is_invoice = #{record.isInvoice,jdbcType=BIT},
      </if>
      <if test="record.invoiceCode != null" >
        invoice_code = #{record.invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsComCode != null" >
        logistics_com_code = #{record.logisticsComCode,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsNo != null" >
        logistics_no = #{record.logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outerCreateTime != null" >
        outer_create_time = #{record.outerCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sellerMemo != null" >
        seller_memo = #{record.sellerMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerMemo != null" >
        buyer_memo = #{record.buyerMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.remainTime != null" >
        remain_time = #{record.remainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allocatedTime != null" >
        allocated_time = #{record.allocatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shipedTime != null" >
        shiped_time = #{record.shipedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyerNick != null" >
        buyer_nick = #{record.buyerNick,jdbcType=VARCHAR},
      </if>
      <if test="record.receivedTime != null" >
        received_time = #{record.receivedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approveTime != null" >
        approve_time = #{record.approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelTime != null" >
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.parentOrderId != null" >
        parent_order_id = #{record.parentOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approveMip != null" >
        approve_mip = #{record.approveMip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order_main
    set order_id = #{record.orderId,jdbcType=BIGINT},
      platform_id = #{record.platformId,jdbcType=TINYINT},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      outer_order_id = #{record.outerOrderId,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=TINYINT},
      pay_code = #{record.payCode,jdbcType=TINYINT},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      item_amount = #{record.itemAmount,jdbcType=DECIMAL},
      delivery_fee = #{record.deliveryFee,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      adjust_amount = #{record.adjustAmount,jdbcType=DECIMAL},
      payment_amount = #{record.paymentAmount,jdbcType=DECIMAL},
      other_amount = #{record.otherAmount,jdbcType=DECIMAL},
      trade_from = #{record.tradeFrom,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_order_no = #{record.payOrderNo,jdbcType=VARCHAR},
      sale_type = #{record.saleType,jdbcType=TINYINT},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      order_flag = #{record.orderFlag,jdbcType=TINYINT},
      refund_status = #{record.refundStatus,jdbcType=TINYINT},
      is_invoice = #{record.isInvoice,jdbcType=BIT},
      invoice_code = #{record.invoiceCode,jdbcType=VARCHAR},
      logistics_com_code = #{record.logisticsComCode,jdbcType=VARCHAR},
      logistics_no = #{record.logisticsNo,jdbcType=VARCHAR},
      outer_create_time = #{record.outerCreateTime,jdbcType=TIMESTAMP},
      seller_memo = #{record.sellerMemo,jdbcType=VARCHAR},
      buyer_memo = #{record.buyerMemo,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      remain_time = #{record.remainTime,jdbcType=TIMESTAMP},
      allocated_time = #{record.allocatedTime,jdbcType=TIMESTAMP},
      shiped_time = #{record.shipedTime,jdbcType=TIMESTAMP},
      buyer_nick = #{record.buyerNick,jdbcType=VARCHAR},
      received_time = #{record.receivedTime,jdbcType=TIMESTAMP},
      approve_time = #{record.approveTime,jdbcType=TIMESTAMP},
      cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      parent_order_id = #{record.parentOrderId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      approve_mip = #{record.approveMip,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.midea.trade.sharding.entity.TOrderMain" >
    update t_order_main
    <set >
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=TINYINT},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="outerOrderId != null" >
        outer_order_id = #{outerOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="payCode != null" >
        pay_code = #{payCode,jdbcType=TINYINT},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="itemAmount != null" >
        item_amount = #{itemAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null" >
        delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAmount != null" >
        adjust_amount = #{adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentAmount != null" >
        payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherAmount != null" >
        other_amount = #{otherAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeFrom != null" >
        trade_from = #{tradeFrom,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payOrderNo != null" >
        pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="saleType != null" >
        sale_type = #{saleType,jdbcType=TINYINT},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="orderFlag != null" >
        order_flag = #{orderFlag,jdbcType=TINYINT},
      </if>
      <if test="refundStatus != null" >
        refund_status = #{refundStatus,jdbcType=TINYINT},
      </if>
      <if test="isInvoice != null" >
        is_invoice = #{isInvoice,jdbcType=BIT},
      </if>
      <if test="invoiceCode != null" >
        invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="logisticsComCode != null" >
        logistics_com_code = #{logisticsComCode,jdbcType=VARCHAR},
      </if>
      <if test="logisticsNo != null" >
        logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="outerCreateTime != null" >
        outer_create_time = #{outerCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerMemo != null" >
        seller_memo = #{sellerMemo,jdbcType=VARCHAR},
      </if>
      <if test="buyerMemo != null" >
        buyer_memo = #{buyerMemo,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="remainTime != null" >
        remain_time = #{remainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allocatedTime != null" >
        allocated_time = #{allocatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipedTime != null" >
        shiped_time = #{shipedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyerNick != null" >
        buyer_nick = #{buyerNick,jdbcType=VARCHAR},
      </if>
      <if test="receivedTime != null" >
        received_time = #{receivedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveTime != null" >
        approve_time = #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentOrderId != null" >
        parent_order_id = #{parentOrderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveMip != null" >
        approve_mip = #{approveMip,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.midea.trade.sharding.entity.TOrderMain" >
    update t_order_main
    set platform_id = #{platformId,jdbcType=TINYINT},
      shop_id = #{shopId,jdbcType=INTEGER},
      outer_order_id = #{outerOrderId,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=TINYINT},
      pay_code = #{payCode,jdbcType=TINYINT},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      item_amount = #{itemAmount,jdbcType=DECIMAL},
      delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      adjust_amount = #{adjustAmount,jdbcType=DECIMAL},
      payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      other_amount = #{otherAmount,jdbcType=DECIMAL},
      trade_from = #{tradeFrom,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      sale_type = #{saleType,jdbcType=TINYINT},
      order_status = #{orderStatus,jdbcType=TINYINT},
      order_flag = #{orderFlag,jdbcType=TINYINT},
      refund_status = #{refundStatus,jdbcType=TINYINT},
      is_invoice = #{isInvoice,jdbcType=BIT},
      invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      logistics_com_code = #{logisticsComCode,jdbcType=VARCHAR},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      outer_create_time = #{outerCreateTime,jdbcType=TIMESTAMP},
      seller_memo = #{sellerMemo,jdbcType=VARCHAR},
      buyer_memo = #{buyerMemo,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      remain_time = #{remainTime,jdbcType=TIMESTAMP},
      allocated_time = #{allocatedTime,jdbcType=TIMESTAMP},
      shiped_time = #{shipedTime,jdbcType=TIMESTAMP},
      buyer_nick = #{buyerNick,jdbcType=VARCHAR},
      received_time = #{receivedTime,jdbcType=TIMESTAMP},
      approve_time = #{approveTime,jdbcType=TIMESTAMP},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      parent_order_id = #{parentOrderId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      approve_mip = #{approveMip,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>